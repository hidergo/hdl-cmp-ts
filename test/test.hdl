<!-- IMAGES -->
<!-- 
    Preloaded images should be loaded in the programs memory.
    Preloaded images are defined in the code in the following way:
    `HDL_PreloadBitmap(&interface, 0x0001, HDL_IMG_image_bmp_c, HDL_IMG_SIZE_image_bmp_c);`
    hdl-cmp CLI can be used to create C files from the images
-->
<!-- Preloaded image definition. preload field has the same id which is defined in the code  -->
<imgdef name="LOGO" preload="1" />

<!--
    Bundled images are images, which are compiled (without compression) to the hdl output file.
-->
<!-- Loading image from disk. Note that this bundles the image to output file, so the output will be large -->
<imgdef name="BUNDLED_IMAGE" src="test/image.bmp" />
<!-- Spritesheet. sw = sprite width. sh = sprite height -->
<imgdef name="BUNDLED_SPRITES" src="test/sprites.bmp" sw="16" sh="16" />

<!-- You shouldn't define sprite width and height on preloaded images, they are defined when the images are compiled through the CLI -->



<!-- BINDINGS -->
<!--
    Can be used to bind some value in code.
-->

<!-- Defines a bound temperature value -->
<!-- 
    Defined in code in the following way:
    `HDL_SetBinding(&interface, "TEMPERATURE", 0x01, &f_temp_val)`
    `f_temp_val` in this case is a float value.
-->
<bind name="TEMPERATURE" id="3" />


<box flexdir="row">
    <!-- Displaying a float temperature value. You can use C sprintf style formatting on the values. -->
    <box padding="10">
        <box bind="$TEMPERATURE" border="5" radius="10">
            Temp: %i
        </box>
    </box>
    <!-- Displaying single image -->
    <box img="BUNDLED_IMAGE" />
    <box flexdir="col">
        <!-- Spritesheet image -->
        <box img="BUNDLED_SPRITES" sprite="0" />
        <box img="BUNDLED_SPRITES" sprite="1" />
    </box>
</box>